==== MS Key Concepts ====================
Isolation ( Isolate Everything !) - Code Simplicity- Services, Teams, Scalability
Distributed System 
Single Responsibility (Single-responsiblity principle)
Always oriented around business or domain capabilities or facts.
It is a journey (constant evolution) -> Evolutionary Architectures.
Loose-Coupling and high cohesion
Automate Everything
	Infrstructure as Code
Design and Expect failure
Eventual Consistency
2PC is an anti-pattern
High(and automated) observability
Autonomy (Team Cohesiveness)

Smart end points and dump pipes
https://medium.com/@nathankpeck/microservice-principles-smart-endpoints-and-dumb-pipes-5691d410700f
https://martinfowler.com/articles/microservices.html
https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/
https://dzone.com/articles/challenges-in-implementing-microservices

observability
https://medium.com/observability/microservices-observability-26a8b7056bb4

Spring boot/cloud
Spring boot
https://spring.io/
https://start.spring.io/
For tool 
https://spring.io/tools
https://spring.io/cloud
https://12factor.net/
https://www.heroku.com/

GIT URL
https://github.com/prabhakarmishra/mschassis.git
https://github.com/prabhakarmishra/MSVirtualSession.git

Agile 
- Go to market is faster
- feedback 
- improve the quality of product/work
Spring cloud config server

Spring Cloud bus refresh end points via postman
http://localhost:8001/actuator/bus-refresh

service discovery
https://microservices.io/patterns/service-registry.html

https://spring.io/reactive

 
Webex Recoding 
Monday, April 13, 2020  |  12:02 am  |  Eastern Daylight Time (New York, GMT-04:00)  
Duration: 7 hr 7 min 44 sec  
Recording password: 2wGJ5UWu  
https://ibm.webex.com/ibm/ldr.php?RCID=2e7b9b9cee2a4676a900b8c226c4a24d

Tuesday, April 14, 2020  |  12:01 am  |  Eastern Daylight Time (New York, GMT-04:00) 
Duration: 7 hr 18 min 51 sec 
Recording password: xUzhkDW8 
https://ibm.webex.com/recordingservice/sites/ibm/recording/playback/d4f78d452b9f4230ba8b4d7157855137
